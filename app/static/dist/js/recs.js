const $=(selector)=>document.querySelector(selector);const $$=(selector)=>document.querySelectorAll(selector);const on=(element,event,selector,handler)=>{element.addEventListener(event,(e)=>{if(e.target.closest(selector)){handler(e);}});};const fetchJSON=async(url,options={})=>{const response=await fetch(url,{...options,headers:{...options.headers,"Content-Type":"application/json","X-CSRFToken":getCsrfToken(),},});if(!response.ok)throw new Error("Network response was not ok");return response.json();};const showToast=(message,type="success")=>{const toast=$("#toast");$("#toastMessage").textContent=message;toast.className=type;toast.style.display="block";setTimeout(()=>(toast.style.display="none"),5000);};const handlePlaylistModal=(event)=>{const button=event.target.closest(".add-to-playlist");if(!button)return;event.preventDefault();const modal=$("#playlistModal");modal.dataset.trackid=button.dataset.trackid;modal.dataset.button=button;modal.style.display="block";};const addToPlaylist=async(trackId,playlistId,button)=>{try{await fetchJSON("/recs/add_to_playlist",{method:"POST",body:JSON.stringify({track_id:trackId,playlist_id:playlistId}),});showToast("Added to Playlist!");button.querySelector(".plus-icon").classList.replace("plus-icon-grey","plus-icon-green");$("#playlistModal").style.display="none";}catch(error){console.error("Error:",error);showToast("An error occurred while adding to the playlist.","error");}};const updateSeedsInput=()=>{const seedsContainer=$("#universal_seeds_container");const seeds=[...seedsContainer.querySelectorAll(".clickable-result")];const ids=seeds.map((seed)=>seed.dataset.id);const trackIds=seeds.filter((seed)=>seed.classList.contains("track")).map((seed)=>seed.dataset.id);const artistIds=seeds.filter((seed)=>seed.classList.contains("artist")).map((seed)=>seed.dataset.id);seedsContainer.value=ids.join(",");$("#track_seeds").value=trackIds.join(",");$("#artist_seeds").value=artistIds.join(",");};const addToSeeds=(event)=>{const seedsCount=$$("#universal_seeds_container .clickable-result").length;if(seedsCount>=5){alert("You can select no more than 5 combined seeds.");return;}
const button=event.target.closest(".add-to-seeds");const resultItem=button.closest(".result-item");const imgSrc=resultItem.querySelector(".result-cover-art").src;const seedType=button.classList.contains("track")?"track":"artist";const seedElement=document.createElement("div");seedElement.className=`clickable-result ${seedType}`;seedElement.dataset.id=button.dataset[seedType==="track"?"trackid":"artistid"];seedElement.innerHTML=`<img src="${imgSrc}"alt="Cover Art"class="result-image"><div class="result-info"><h2>${button.dataset.name||button.dataset.artist}</h2>${seedType==="track"?`<p>${button.dataset.artist}</p>`:""}</div>`;$("#universal_seeds_container").appendChild(seedElement);updateSeedsInput();};const getRecommendations=async()=>{try{const form=$("form");const formData=new FormData(form);const formObject=Object.fromEntries(formData.entries());const data=await fetchJSON("/recs/get_recommendations",{method:"POST",body:JSON.stringify(formObject),});displayRecommendations(data.recommendations);}catch(error){console.error("Error:",error);showToast("Failed to get recommendations","error");}};const createTrackElement=(trackInfo)=>{const div=document.createElement("div");div.className="result-item";div.innerHTML=`<div class="result-cover-art-container"><img src="${trackInfo.cover_art}"alt="Cover Art"class="result-cover-art"><div class="caption"><h2>${trackInfo.trackName}</h2><p>${trackInfo.artist}</p></div><div class="play-button noselect"id="play_${trackInfo.trackid}"><i class="icon-play"></i></div></div><div class="dropdown-content"><a href="#"class="add-to-saved"data-trackid="${trackInfo.trackid}"><i class="heart-icon icon-heart-plus"></i></a><a href="#"class="add-to-playlist"data-trackid="${trackInfo.trackid}"><i class="plus-icon icon-album-plus"></i></a></div><audio controls class="audio-player"id="audio_${trackInfo.trackid}"><source src="${trackInfo.preview}"type="audio/mpeg">Your browser does not support the audio element.</audio>`;return div;};let currentPlayingAudio=null;const setupPlayToggle=(trackId)=>{const playButton=$(`#play_${trackId}`);const audioPlayer=$(`#audio_${trackId}`);const playIcon=playButton.querySelector("i");playButton.addEventListener("click",()=>{if(currentPlayingAudio&&currentPlayingAudio!==audioPlayer){currentPlayingAudio.pause();currentPlayingAudio.currentTime=0;const playingId=currentPlayingAudio.id.replace("audio_","");$(`#play_${playingId}`).querySelector("i").className="icon-play";}
if(audioPlayer.paused){audioPlayer.play();playIcon.className="icon-pause";currentPlayingAudio=audioPlayer;}else{audioPlayer.pause();playIcon.className="icon-play";currentPlayingAudio=null;}});};const displayRecommendations=(recommendations)=>{const resultsContainer=$("#results");resultsContainer.innerHTML="";recommendations.forEach((trackInfo)=>{const trackElement=createTrackElement(trackInfo);resultsContainer.appendChild(trackElement);setupPlayToggle(trackInfo.trackid);});};document.addEventListener("DOMContentLoaded",()=>{fetchJSON("/recs/get-user-playlists").then((playlists)=>{if(playlists.error){$("#playlistOptions").innerHTML=`<p>Error:${playlists.error}</p>`;}else{$("#playlistOptions").innerHTML=playlists.map((playlist)=>`<div class="playlist-option"data-playlistid="${playlist.id}"><div class="playlist-item"><img src="${playlist.cover_art}"alt="${playlist.name}"class="playlist-image"><h3 class="playlist-name">${playlist.name}</h3><p>Owner:${playlist.owner}</p></div></div>`,).join("");}}).catch((error)=>{console.error("Error fetching playlists:",error);$("#playlistOptions").innerHTML="<p>Failed to load playlists.</p>";});on(document,"click","#showInstructions",()=>{$("#instructionsModal").style.display="block";document.body.style.overflow="hidden";});on(document,"click",".close",()=>{$("#instructionsModal").style.display="none";document.body.style.overflow="auto";});window.addEventListener("click",(event)=>{if(event.target===$("#instructionsModal")){$("#instructionsModal").style.display="none";document.body.style.overflow="auto";}});$("form").addEventListener("submit",(event)=>{event.preventDefault();getRecommendations();});on(document,"click",".add-to-saved",async(event)=>{event.preventDefault();const button=event.target.closest(".add-to-saved");const heartIcon=button.querySelector(".heart-icon");const trackId=button.dataset.trackid;const action=heartIcon.classList.contains("icon-heart-minus")?"unsave":"save";try{await fetchJSON(`/recs/${action}_track`,{method:"POST",body:JSON.stringify({track_id:trackId}),});showToast(`Track ${action}d successfully!`);heartIcon.classList.toggle("icon-heart-minus");heartIcon.classList.toggle("icon-heart-plus");heartIcon.classList.toggle("liked");}catch(error){showToast(`An error occurred while ${action}ing the track.`,"error");console.error("Error:",error);}});on(document,"click",".add-to-playlist",handlePlaylistModal);on($("#playlistModal"),"click",".playlist-option",(event)=>{const{trackid,button}=$("#playlistModal").dataset;const playlistId=event.target.closest(".playlist-option").dataset.playlistid;addToPlaylist(trackid,playlistId,$(button));});on(document,"click",".add-to-seeds-toggle",(event)=>{event.preventDefault();event.target.closest(".add-to-seeds-toggle").nextElementSibling.classList.toggle("hidden");});window.addEventListener("click",(event)=>{if(!event.target.closest(".add-to-seeds-dropdown")){$$(".seeds-options").forEach((element)=>element.classList.add("hidden"),);}});on(document,"click",".add-to-seeds",addToSeeds);on($("#universal_seeds_container"),"click",".clickable-result",(event)=>{event.target.closest(".clickable-result").remove();updateSeedsInput();});$("#universal_search").addEventListener("click",async()=>{const query=$("#universal_input").value;try{const data=await fetchJSON("/recs/search",{method:"POST",body:JSON.stringify({query,type:"track,artist"}),});const searchResults=$("#universal_search_results");searchResults.innerHTML="";data.tracks.items.forEach((result)=>{searchResults.insertAdjacentHTML("beforeend",`<div class="clickable-result track"data-id="${result.id}"><img src="${result.album.images[0].url}"alt="Cover Art"class="result-image"><div class="result-info"><h2>${result.name}</h2><p>${result.artists[0].name}</p></div></div>`,);});data.artists.items.forEach((result)=>{searchResults.insertAdjacentHTML("beforeend",`<div class="clickable-result artist"data-id="${result.id}"><img src="${result.images[0].url}"alt="${result.name}"class="result-image"><div class="result-info"><h2>${result.name}</h2></div></div>`,);});}catch(error){console.error("Error:",error);$("#universal_search_results").innerHTML="<p>An error occurred during search.</p>";}});$("#universal_input").addEventListener("keypress",(e)=>{if(e.key==="Enter"){$("#universal_search").click();}});});