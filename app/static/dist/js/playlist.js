const util={getCsrfToken:()=>document.querySelector('meta[name="csrf-token"]').getAttribute("content"),showToast:(message,type="success")=>{const toast=document.getElementById("toast");const toastMessage=document.getElementById("toastMessage");toastMessage.textContent=message;toast.className=type;toast.style.display="block";setTimeout(()=>{toast.style.display="none";},5000);},toggleDivVisibility:(selector)=>{const el=document.querySelector(selector);el.style.display=el.style.display==="none"?"block":"none";},};const chartModule=(()=>{let myPieChart;const initChart=(yearCountData)=>{const ctx=document.getElementById("YrPieChart").getContext("2d");const labels=Object.keys(yearCountData);const data=Object.values(yearCountData);myPieChart=new Chart(ctx,{type:"pie",data:{labels:labels,datasets:[{data:data,backgroundColor:["rgba(255, 99, 132, 0.5)","rgba(54, 162, 235, 0.5)","rgba(255, 206, 86, 0.5)","rgba(75, 192, 192, 0.5)","rgba(153, 102, 255, 0.5)","rgba(255, 159, 64, 0.5)",],},],},options:{cutoutPercentage:5,responsive:true,plugins:{title:{display:false,text:"Distribution of Track Release Dates",fontSize:16,align:"center",position:"bottom",},legend:{position:"left",labels:{boxWidth:10,padding:5},},},},});};return{initChart};})();const playlistActionsModule=(()=>{const likeAllSongs=(playlistId)=>{fetch(`/playlist/like_all_songs/${playlistId}`).then((response)=>response.text()).then(util.showToast).catch(()=>util.showToast("An error occurred while liking all songs.","error"),);};const unlikeAllSongs=(playlistId)=>{fetch(`/playlist/unlike_all_songs/${playlistId}`).then((response)=>response.text()).then(util.showToast).catch((error)=>util.showToast(`An error occurred while unliking all songs:${error}`,"error",),);};const removeDuplicates=(playlistId)=>{fetch(`/playlist/remove_duplicates/${playlistId}`).then(()=>util.showToast("Successfully removed duplicates.")).catch((error)=>util.showToast(`An error occurred while removing duplicates:${error}`,"error",),);};const reorderPlaylist=(playlistId,criterion)=>{fetch(`/playlist/playlist/${playlistId}/reorder`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":util.getCsrfToken(),},body:JSON.stringify({sorting_criterion:criterion}),}).then((response)=>response.json()).then((response)=>{if(response.status==="Playlist reordered successfully"){util.showToast("Playlist reordered successfully.");}else{util.showToast("Failed to reorder playlist.","error");}}).catch((error)=>util.showToast(`An error occurred while reordering the playlist:${error}`,"error",),);};return{likeAllSongs,unlikeAllSongs,removeDuplicates,reorderPlaylist};})();const recommendationModule=(()=>{let recommendationsFetched=false;const getPLRecommendations=async(playlistId)=>{try{const response=await fetch(`/playlist/get_pl_recommendations/${playlistId}/recommendations`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":util.getCsrfToken(),},},);const data=await response.json();util.toggleDivVisibility(".results-title-spot");displayRecommendations(data.recommendations);}catch(error){console.error("Error:",error);}};const createTrackElement=(trackInfo)=>{const div=document.createElement("div");div.className="result-item";div.innerHTML=`<div class="result-cover-art-container"><img src="${trackInfo.cover_art}"alt="Cover Art"class="result-cover-art"><div class="caption"><h2>${trackInfo.trackName}</h2><p>${trackInfo.artist}</p></div><div class="play-button noselect"id="play_${trackInfo.trackid}"><i class="rawcon-play"></i></div></div><div class="dropdown-content"><a href="#"class="add-to-saved"data-trackid="${trackInfo.trackid}"><i class="heart-icon icon-heart-plus"></i></a><a href="#"class="add-to-playlist"data-trackid="${trackInfo.trackid}"><i class="plus-icon icon-album-plus"></i></a></div><audio controls class="audio-player"id="audio_${trackInfo.trackid}"><source src="${trackInfo.preview}"type="audio/mpeg">Your browser does not support the audio element.</audio>`;return div;};const displayRecommendations=(recommendations)=>{const resultsContainer=document.getElementById("results");resultsContainer.innerHTML="";recommendations.forEach((trackInfo)=>{const trackElement=createTrackElement(trackInfo);resultsContainer.appendChild(trackElement);audioModule.setupPlayToggle(trackInfo.trackid);});};return{getPLRecommendations,recommendationsFetched,displayRecommendations,};})();const audioModule=(()=>{let currentPlayingAudio=null;const setupPlayToggle=(trackId)=>{const playButton=document.getElementById(`play_${trackId}`);const audioPlayer=document.getElementById(`audio_${trackId}`);const playIcon=playButton.querySelector("i");playButton.addEventListener("click",()=>{if(currentPlayingAudio&&currentPlayingAudio!==audioPlayer){currentPlayingAudio.pause();currentPlayingAudio.currentTime=0;const playingId=currentPlayingAudio.getAttribute("id").replace("audio_","");document.getElementById(`play_${playingId}`).querySelector("i").className="rawcon-play";}
if(audioPlayer.paused){audioPlayer.play();playIcon.className="rawcon-pause";currentPlayingAudio=audioPlayer;}else{audioPlayer.pause();playIcon.className="rawcon-play";currentPlayingAudio=null;}});};return{setupPlayToggle};})();const trackActionsModule=(()=>{const addToPlaylist=(playlistId,trackId,plusIcon)=>{fetch("/recs/add_to_playlist",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":util.getCsrfToken(),},body:JSON.stringify({playlist_id:playlistId,track_id:trackId}),}).then(()=>{util.showToast("Track added to playlist successfully!");plusIcon.classList.remove("rawcon-album-plus");plusIcon.classList.add("rawcon-layer-minus","added");}).catch((error)=>{util.showToast("An error occurred while adding the track to the playlist.","error",);console.error("Error:",error);});};const removeFromPlaylist=(playlistId,trackId,plusIcon)=>{fetch("/recs/remove_from_playlist",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":util.getCsrfToken(),},body:JSON.stringify({playlist_id:playlistId,track_id:trackId}),}).then(()=>{util.showToast("Track removed from playlist successfully!");plusIcon.classList.remove("rawcon-layer-minus","added");plusIcon.classList.add("rawcon-album-plus");}).catch((error)=>{util.showToast("An error occurred while removing the track from the playlist.","error",);console.error("Error:",error);});};const saveTrack=(trackId,heartIcon)=>{fetch("/recs/save_track",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":util.getCsrfToken(),},body:JSON.stringify({track_id:trackId}),}).then(()=>{util.showToast("Track saved successfully!");heartIcon.classList.add("liked");}).catch((error)=>{util.showToast("An error occurred while saving the track.","error");console.error("Error:",error);});};const unsaveTrack=(trackId,heartIcon)=>{fetch("/recs/unsave_track",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":util.getCsrfToken(),},body:JSON.stringify({track_id:trackId}),}).then(()=>{util.showToast("Track unsaved successfully!");heartIcon.classList.remove("liked");}).catch((error)=>{util.showToast("An error occurred while unsaving the track.","error");console.error("Error:",error);});};return{addToPlaylist,removeFromPlaylist,saveTrack,unsaveTrack};})();const uiModule=(()=>{const setupEventListeners=(playlistId)=>{document.querySelectorAll(".data-view-btn").forEach((btn)=>{btn.addEventListener("click",function(){document.querySelectorAll(".data-view-btn").forEach((b)=>b.classList.remove("active"));this.classList.add("active");const dataViewToShow=this.id.replace("-btn","");document.querySelectorAll(".data-view").forEach((view)=>(view.style.display="none"));document.getElementById(dataViewToShow).style.display="block";});});document.getElementById("like-all-songs-btn").addEventListener("click",()=>playlistActionsModule.likeAllSongs(playlistId),);document.getElementById("unlike-all-songs-btn").addEventListener("click",()=>playlistActionsModule.unlikeAllSongs(playlistId),);document.getElementById("recommendations-btn").addEventListener("click",(event)=>{event.preventDefault();if(!recommendationModule.recommendationsFetched){recommendationModule.getPLRecommendations(playlistId);recommendationModule.recommendationsFetched=true;}else{util.toggleDivVisibility(".results-title-spot");}});const reorderButtons=[{id:"order-desc-btn",criterion:"Date Added - Descending"},{id:"order-asc-btn",criterion:"Date Added - Ascending"},{id:"rd-asc-btn",criterion:"Release Date - Ascending"},{id:"rd-desc-btn",criterion:"Release Date - Descending"},{id:"shuffle-btn",criterion:"Shuffle"},];reorderButtons.forEach((button)=>{document.getElementById(button.id).addEventListener("click",()=>showReorderModal(()=>playlistActionsModule.reorderPlaylist(playlistId,button.criterion),),);});document.addEventListener("click",(event)=>{if(event.target.closest(".add-to-playlist")){event.preventDefault();const plusIcon=event.target.closest(".add-to-playlist").querySelector(".plus-icon");const trackId=event.target.closest(".add-to-playlist").dataset.trackid;if(plusIcon.classList.contains("icon-layer-minus")){trackActionsModule.removeFromPlaylist(playlistId,trackId,plusIcon);}else{trackActionsModule.addToPlaylist(playlistId,trackId,plusIcon);}}else if(event.target.closest(".add-to-saved")){event.preventDefault();const heartIcon=event.target.closest(".add-to-saved").querySelector(".heart-icon");const trackId=event.target.closest(".add-to-saved").dataset.trackid;if(heartIcon.classList.contains("liked")){trackActionsModule.unsaveTrack(trackId,heartIcon);}else{trackActionsModule.saveTrack(trackId,heartIcon);}}});document.querySelectorAll("#genre-counts > ul > li").forEach((item)=>{item.addEventListener("click",function(){const artistList=this.querySelector(".artist-genre-list");artistList.style.display=artistList.style.display==="none"||artistList.style.display===""?"block":"none";});});};const showReorderModal=(callback)=>{const modal=document.getElementById("reorderModal");modal.style.display="block";document.getElementById("confirmReorder").onclick=()=>{modal.style.display="none";callback();};document.getElementById("cancelReorder").onclick=()=>{modal.style.display="none";};};const setupIntersectionObserver=()=>{const observer=new IntersectionObserver((entries)=>{entries.forEach((entry)=>{if(entry.isIntersecting){entry.target.classList.add("animate");}else{entry.target.classList.remove("animate");}});});document.querySelectorAll(".data-view").forEach((element)=>{observer.observe(element);});};return{setupEventListeners,showReorderModal,setupIntersectionObserver};})();document.addEventListener("DOMContentLoaded",function(){const dataContainer=document.getElementById("data-container");let yearCountData=dataContainer.dataset.yearCount;const playlistId=dataContainer.dataset.playlistId;try{yearCountData=JSON.parse(yearCountData);}catch(error){console.error("yearCountData could not be converted to a dictionary:",error,);}
chartModule.initChart(yearCountData);uiModule.setupEventListeners(playlistId);uiModule.setupIntersectionObserver();document.querySelector(".close-toast").addEventListener("click",function(){this.parentElement.style.display="none";});});