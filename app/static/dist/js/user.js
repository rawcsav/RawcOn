document.addEventListener("DOMContentLoaded",function(){const timePeriodSelect=document.getElementById("timePeriod");const topArtistsList=document.getElementById("topArtists");const topTracksList=document.getElementById("topTracks");const topGenresList=document.getElementById("topGenres");const playlistsList=document.getElementById("playlists");const prevArtistsBtn=document.getElementById("prevArtists");const nextArtistsBtn=document.getElementById("nextArtists");const prevTracksBtn=document.getElementById("prevTracks");const nextTracksBtn=document.getElementById("nextTracks");const artistsPageInfo=document.getElementById("artistsPageInfo");const tracksPageInfo=document.getElementById("tracksPageInfo");const genreDetails=document.getElementById("genre-details");const genreTitle=document.getElementById("genre-title");const genreArtistsList=document.getElementById("genre-artists-list");const genreTracksList=document.getElementById("genre-tracks-list");let audioFeaturesChart;const ITEMS_PER_PAGE=10;let currentArtistsPage=1;let currentTracksPage=1;function updateDisplay(period){console.log("Updating display for period:",period);updateTopArtists(period);updateTopTracks(period);updateTopGenres(period);}
function updateTopArtists(period){if(topArtistsSummary&&topArtistsSummary[period]){displayArtists(topArtistsSummary[period],currentArtistsPage);updatePagination(topArtistsSummary[period].length,currentArtistsPage,"artists",);}else{topArtistsList.innerHTML="<p>No data available</p>";updatePagination(0,1,"artists");}}
function updateTopTracks(period){if(topTracksSummary&&topTracksSummary[period]){displayTracks(topTracksSummary[period],currentTracksPage);updatePagination(topTracksSummary[period].length,currentTracksPage,"tracks",);}else{topTracksList.innerHTML="<p>No data available</p>";updatePagination(0,1,"tracks");}}
function displayArtists(artists,page){const start=(page-1)*ITEMS_PER_PAGE;const end=start+ITEMS_PER_PAGE;const artistsToDisplay=artists.slice(start,end);topArtistsList.innerHTML=artistsToDisplay.map((artist)=>`<div class="grid-item"><a href="${artist.spotify_url}"target="_blank"><img src="${artist.image_url || "/static/dist/img/default-artist.png"}"alt="${artist.name}"class="artist-image"><p>${artist.name}</p></a></div>`,).join("");}
function displayTracks(tracks,page){const start=(page-1)*ITEMS_PER_PAGE;const end=start+ITEMS_PER_PAGE;const tracksToDisplay=tracks.slice(start,end);topTracksList.innerHTML=tracksToDisplay.map((track)=>`<div class="grid-item"><a href="${track.spotify_url}"target="_blank"><img src="${track.image_url || "/static/dist/img/default-album.png"}"alt="${track.name}"class="track-image"><p>${track.name}</p><p class="artist-name">${track.artists.join(", ")}</p></a></div>`,).join("");}
function updatePagination(totalItems,currentPage,type){const totalPages=Math.ceil(totalItems/ITEMS_PER_PAGE);const pageInfo=type==="artists"?artistsPageInfo:tracksPageInfo;pageInfo.innerHTML=`Page&nbsp;${currentPage}&nbsp;of&nbsp;${totalPages}`;const prevBtn=type==="artists"?prevArtistsBtn:prevTracksBtn;const nextBtn=type==="artists"?nextArtistsBtn:nextTracksBtn;prevBtn.disabled=currentPage===1;nextBtn.disabled=currentPage===totalPages;}
function updateTopGenres(period){if(topGenres&&topGenres[period]){topGenresList.innerHTML=topGenres[period].map((genre)=>`<a href="#"class="genre-link"data-period="${period}"data-genre="${genre[0]}">${genre[0]}</a>`,).join(" ");addGenreEventListeners();}else{topGenresList.innerHTML="No data available";}}
function addGenreEventListeners(){const genreLinks=document.querySelectorAll(".genre-link");genreLinks.forEach((link)=>{link.addEventListener("click",function(e){e.preventDefault();const period=this.dataset.period;const genre=this.dataset.genre;fetchGenreData(period,genre);});});}
function fetchGenreData(period,genre){fetch(`/user/genre_data/${period}/${encodeURIComponent(genre)}`).then((response)=>response.json()).then((data)=>{displayGenreData(genre,period,data);}).catch((error)=>console.error("Error:",error));}
function displayGenreData(genre,period,data){genreTitle.textContent=`${genre}(${period.replace("_"," ")})`;genreArtistsList.innerHTML=data.top_artists.map((artist)=>`<li class="grid-item"><img src="${
            artist.images && artist.images.length > 0
              ? artist.images[0].url
              : "/static/dist/img/default-artist.png"
          }"alt="${artist.name}"class="artist-image"><p>${artist.name}</p></li>`,).join("");genreTracksList.innerHTML=data.top_tracks.map((track)=>`<li class="grid-item"><img src="${
            track.album && track.album.images && track.album.images.length > 0
              ? track.album.images[0].url
              : "/static/dist/img/default-album.png"
          }"alt="${track.name}"class="track-image"><p>${track.name}</p><p class="artist-name">${track.artists[0].name}</p></li>`,).join("");genreDetails.style.display="block";}
function createEnhancedAudioFeaturesChart(audioFeaturesSummary,periodData){const ctx=document.getElementById("audioFeaturesChart").getContext("2d");const features=["acousticness","danceability","energy","instrumentalness","liveness","speechiness","valence","loudness","tempo",];let currentPeriod="short_term";let showMinMax=false;const featureRanges={acousticness:[0,1],danceability:[0,1],energy:[0,1],instrumentalness:[0,1],liveness:[0,1],speechiness:[0,1],valence:[0,1],loudness:[-60,0],tempo:[0,250],};function normalizeFeature(feature,value){const[min,max]=featureRanges[feature];return(value-min)/(max-min);}
function denormalizeFeature(feature,value){const[min,max]=featureRanges[feature];return value*(max-min)+min;}
let chart=new Chart(ctx,{type:"radar",data:{labels:features,datasets:[{label:"Audio Features",data:features.map((feature)=>normalizeFeature(feature,audioFeaturesSummary[currentPeriod][feature],),),backgroundColor:"rgba(29, 185, 84, 0.2)",borderColor:"rgb(29, 185, 84)",pointBackgroundColor:"rgb(29, 185, 84)",pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:"rgb(29, 185, 84)",},],},options:{scales:{r:{angleLines:{display:false},suggestedMin:0,suggestedMax:1,},},plugins:{tooltip:{callbacks:{label:function(context){const feature=context.label.toLowerCase();const value=denormalizeFeature(feature,context.raw);return`${context.label}:${value.toFixed(2)}`;},},},},},});function updateChart(){const avgData=features.map((feature)=>normalizeFeature(feature,audioFeaturesSummary[currentPeriod][feature]),);chart.data.datasets=[{label:"Average",data:avgData,backgroundColor:"rgba(29, 185, 84, 0.2)",borderColor:"rgb(29, 185, 84)",pointBackgroundColor:"rgb(29, 185, 84)",pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:"rgb(29, 185, 84)",},];if(showMinMax){chart.data.datasets.push({label:"Min",data:features.map((feature)=>normalizeFeature(feature,periodData[currentPeriod].min_values[feature],),),backgroundColor:"rgba(255, 99, 132, 0.2)",borderColor:"rgb(255, 99, 132)",pointBackgroundColor:"rgb(255, 99, 132)",pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:"rgb(255, 99, 132)",},{label:"Max",data:features.map((feature)=>normalizeFeature(feature,periodData[currentPeriod].max_values[feature],),),backgroundColor:"rgba(54, 162, 235, 0.2)",borderColor:"rgb(54, 162, 235)",pointBackgroundColor:"rgb(54, 162, 235)",pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:"rgb(54, 162, 235)",},);}
chart.update();updateMinMaxTracks();}
function updateMinMaxTracks(){const minMaxContainer=document.getElementById("minMaxTracks");minMaxContainer.innerHTML="";if(showMinMax){features.forEach((feature)=>{const minTrack=periodData[currentPeriod].min_track[feature];const maxTrack=periodData[currentPeriod].max_track[feature];const featureInfo=document.createElement("div");featureInfo.innerHTML=`<h4>${feature}</h4><p>Min:${minTrack.name}by ${minTrack.artists[0].name}</p><p>Max:${maxTrack.name}by ${maxTrack.artists[0].name}</p>`;minMaxContainer.appendChild(featureInfo);});}}
const controlsContainer=document.createElement("div");controlsContainer.className="audio-features-controls";controlsContainer.innerHTML=`<select id="timePeriodSelect"><option value="short_term">Short Term</option><option value="medium_term">Medium Term</option><option value="long_term">Long Term</option></select><button id="toggleMinMaxBtn">Toggle Min/Max</button>`;document.getElementById("audioFeaturesChart").parentNode.insertBefore(controlsContainer,document.getElementById("audioFeaturesChart"),);const minMaxContainer=document.createElement("div");minMaxContainer.id="minMaxTracks";document.getElementById("audioFeaturesChart").parentNode.appendChild(minMaxContainer);document.getElementById("timePeriodSelect").addEventListener("change",function(e){currentPeriod=e.target.value;updateChart();});document.getElementById("toggleMinMaxBtn").addEventListener("click",function(){showMinMax=!showMinMax;updateChart();});updateChart();}
function displayPlaylists(){if(playlistSummary&&playlistSummary.length>0){playlistsList.innerHTML=playlistSummary.map((playlist)=>`<li>${playlist.name}(${playlist.public?"Public":"Private"})</li>`,).join("");}else{playlistsList.innerHTML="<li>No playlists available</li>";}}
prevArtistsBtn.addEventListener("click",()=>{if(currentArtistsPage>1){currentArtistsPage--;updateTopArtists(timePeriodSelect.value);}});nextArtistsBtn.addEventListener("click",()=>{const totalArtists=topArtistsSummary[timePeriodSelect.value].length;if(currentArtistsPage<Math.ceil(totalArtists/ITEMS_PER_PAGE)){currentArtistsPage++;updateTopArtists(timePeriodSelect.value);}});prevTracksBtn.addEventListener("click",()=>{if(currentTracksPage>1){currentTracksPage--;updateTopTracks(timePeriodSelect.value);}});nextTracksBtn.addEventListener("click",()=>{const totalTracks=topTracksSummary[timePeriodSelect.value].length;if(currentTracksPage<Math.ceil(totalTracks/ITEMS_PER_PAGE)){currentTracksPage++;updateTopTracks(timePeriodSelect.value);}});timePeriodSelect.addEventListener("change",(event)=>{console.log("Time period changed to:",event.target.value);currentArtistsPage=1;currentTracksPage=1;updateDisplay(event.target.value);});updateDisplay("short_term");displayPlaylists();createEnhancedAudioFeaturesChart(audioFeaturesSummary,periodData);});