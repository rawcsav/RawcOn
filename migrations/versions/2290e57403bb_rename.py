"""rename

Revision ID: 2290e57403bb
Revises: 
Create Date: 2024-07-31 20:52:33.873266

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '2290e57403bb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('artgen_sql')
    op.drop_table('artgenurl_sql')
    with op.batch_alter_table('playlist_sql', schema=None) as batch_op:
        batch_op.drop_index('ix_playlist_sql_id')

    op.drop_table('playlist_sql')
    with op.batch_alter_table('features_sql', schema=None) as batch_op:
        batch_op.drop_index('ix_features_sql_id')

    op.drop_table('features_sql')
    with op.batch_alter_table('artist_sql', schema=None) as batch_op:
        batch_op.drop_index('ix_artist_sql_id')

    op.drop_table('artist_sql')
    with op.batch_alter_table('artgenstyle_sql', schema=None) as batch_op:
        batch_op.drop_index('id')

    op.drop_table('artgenstyle_sql')
    op.drop_table('genre_sql')
    with op.batch_alter_table('user_data', schema=None) as batch_op:
        batch_op.drop_column('api_key_encrypted')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_data', schema=None) as batch_op:
        batch_op.add_column(sa.Column('api_key_encrypted', sa.BLOB(), nullable=True))

    op.create_table('genre_sql',
    sa.Column('genre', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('sim_genres', mysql.TEXT(), nullable=True),
    sa.Column('sim_weights', mysql.TEXT(), nullable=True),
    sa.Column('opp_genres', mysql.TEXT(), nullable=True),
    sa.Column('opp_weights', mysql.TEXT(), nullable=True),
    sa.Column('spotify_url', mysql.TEXT(), nullable=True),
    sa.Column('color_hex', mysql.TEXT(), nullable=True),
    sa.Column('color_rgb', mysql.TEXT(), nullable=True),
    sa.Column('x', mysql.FLOAT(), nullable=True),
    sa.Column('y', mysql.FLOAT(), nullable=True),
    sa.Column('closest_stat_genres', mysql.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('genre'),
    mysql_default_charset='utf8mb3',
    mysql_engine='InnoDB'
    )
    op.create_table('artgenstyle_sql',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('art_style', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('gen_style', mysql.VARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8mb3',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('artgenstyle_sql', schema=None) as batch_op:
        batch_op.create_index('id', ['id'], unique=False)

    op.create_table('artist_sql',
    sa.Column('id', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('name', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('external_url', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('followers', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('genres', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('images', mysql.JSON(), nullable=True),
    sa.Column('popularity', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8mb3',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('artist_sql', schema=None) as batch_op:
        batch_op.create_index('ix_artist_sql_id', ['id'], unique=False)

    op.create_table('features_sql',
    sa.Column('id', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('danceability', mysql.FLOAT(), nullable=True),
    sa.Column('energy', mysql.FLOAT(), nullable=True),
    sa.Column('key', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('loudness', mysql.FLOAT(), nullable=True),
    sa.Column('mode', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('speechiness', mysql.FLOAT(), nullable=True),
    sa.Column('acousticness', mysql.FLOAT(), nullable=True),
    sa.Column('instrumentalness', mysql.FLOAT(), nullable=True),
    sa.Column('liveness', mysql.FLOAT(), nullable=True),
    sa.Column('valence', mysql.FLOAT(), nullable=True),
    sa.Column('tempo', mysql.FLOAT(), nullable=True),
    sa.Column('time_signature', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8mb3',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('features_sql', schema=None) as batch_op:
        batch_op.create_index('ix_features_sql_id', ['id'], unique=False)

    op.create_table('playlist_sql',
    sa.Column('id', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('name', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('owner', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('cover_art', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('public', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('collaborative', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('total_tracks', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('snapshot_id', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('tracks', mysql.JSON(), nullable=True),
    sa.Column('genre_counts', mysql.JSON(), nullable=True),
    sa.Column('top_artists', mysql.JSON(), nullable=True),
    sa.Column('feature_stats', mysql.JSON(), nullable=True),
    sa.Column('temporal_stats', mysql.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8mb3',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('playlist_sql', schema=None) as batch_op:
        batch_op.create_index('ix_playlist_sql_id', ['id'], unique=False)

    op.create_table('artgenurl_sql',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('url', mysql.VARCHAR(length=510), nullable=True),
    sa.Column('genre_name', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('art_style', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('random_attribute', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('prompt', mysql.VARCHAR(length=2048), nullable=True),
    sa.Column('playlist_id', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('timestamp', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8mb3',
    mysql_engine='InnoDB'
    )
    op.create_table('artgen_sql',
    sa.Column('genre_name', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('place_1', mysql.TEXT(), nullable=True),
    sa.Column('place_2', mysql.TEXT(), nullable=True),
    sa.Column('place_3', mysql.TEXT(), nullable=True),
    sa.Column('place_4', mysql.TEXT(), nullable=True),
    sa.Column('place_5', mysql.TEXT(), nullable=True),
    sa.Column('role_1', mysql.TEXT(), nullable=True),
    sa.Column('role_2', mysql.TEXT(), nullable=True),
    sa.Column('role_3', mysql.TEXT(), nullable=True),
    sa.Column('role_4', mysql.TEXT(), nullable=True),
    sa.Column('role_5', mysql.TEXT(), nullable=True),
    sa.Column('item_1', mysql.TEXT(), nullable=True),
    sa.Column('item_2', mysql.TEXT(), nullable=True),
    sa.Column('item_3', mysql.TEXT(), nullable=True),
    sa.Column('item_4', mysql.TEXT(), nullable=True),
    sa.Column('item_5', mysql.TEXT(), nullable=True),
    sa.Column('symbol_1', mysql.TEXT(), nullable=True),
    sa.Column('symbol_2', mysql.TEXT(), nullable=True),
    sa.Column('symbol_3', mysql.TEXT(), nullable=True),
    sa.Column('symbol_4', mysql.TEXT(), nullable=True),
    sa.Column('symbol_5', mysql.TEXT(), nullable=True),
    sa.Column('event_1', mysql.TEXT(), nullable=True),
    sa.Column('event_2', mysql.TEXT(), nullable=True),
    sa.Column('event_3', mysql.TEXT(), nullable=True),
    sa.Column('event_4', mysql.TEXT(), nullable=True),
    sa.Column('event_5', mysql.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['genre_name'], ['genre_sql.genre'], name='artgen_sql_ibfk_1'),
    mysql_default_charset='utf8mb3',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
