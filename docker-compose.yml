version: '3.8'
services:
  mysql:
    image: mysql:8.0.36
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${SQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${SQL_DB_NAME}
      MYSQL_USER: remote_user
      MYSQL_PASSWORD: ${SQL_PASSWORD}
    volumes:
      - db_volume:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d/:ro
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - internal

  redis:
    image: redis:6.2-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - internal
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    command: gunicorn --workers 1 -t 90 --bind 0.0.0.0:8081 wsgi:app --log-level=debug
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      FLASK_APP: wsgi.py
      FLASK_ENV: production
      FLASK_SECRET_KEY: ${FLASK_SECRET_KEY}
      SQL_HOSTNAME: mysql
      SQL_USERNAME: remote_user
      SQL_PASSWORD: ${SQL_PASSWORD}
      SQL_DB_NAME: ${SQL_DB_NAME}
      CRYPT_KEY: ${CRYPT_KEY}
      CLOUD_NAME: ${CLOUD_NAME}
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379/0
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_SECRET: ${CLOUDINARY_SECRET}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      REDIRECT_URI: ${REDIRECT_URI}
      CELERY_BROKER_URL: redis://default:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://default:${REDIS_PASSWORD}@redis:6379/0
    volumes:
      - ./app:/rawcon/app
      - ./app/static:/rawcon/app/static
      - ./config.py:/rawcon/config.py
      - ./wsgi.py:/rawcon/wsgi.py
    depends_on:
      - mysql
      - redis
    networks:
      - appnet
      - internal

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A wsgi.celery worker --loglevel=info
    environment:
      FLASK_APP: wsgi.py
      FLASK_ENV: production
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379/0
      CELERY_BROKER_URL: redis://default:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://default:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      - web
      - redis
    networks:
      - internal

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A wsgi.celery beat --loglevel=info
    environment:
      FLASK_APP: wsgi.py
      FLASK_ENV: production
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379/0
      CELERY_BROKER_URL: redis://default:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://default:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      - web
      - redis
    networks:
      - internal

volumes:
  db_volume:
  redis_data:

networks:
  internal:
    driver: "bridge"
  appnet:
    external: true